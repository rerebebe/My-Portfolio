{"ast":null,"code":"var _jsxFileName = \"/Users/apple/demos/Multiples/cutebaby/src/QuizComponents/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuestionBanks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const {\n    score,\n    setScore,\n    gameState,\n    setGameState\n  } = useContext(QuizContext);\n  const [currentQuestion, setCurrentQuestion] = useState(0); //0 is first object in array\n\n  const [optionChosen, setOptionChosen] = useState(\"\");\n\n  function chooseOption(option) {\n    setOptionChosen(option);\n  }\n\n  function nextQuestion() {\n    if (Questions[currentQuestion].answer == optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n\n    if (currentQuestion == Questions.length - 1) {\n      finishQuiz();\n    }\n\n    alert(score);\n    setCurrentQuestion(currentQuestion + 1);\n  } // function prevQuestion() {\n  //   if (Questions[currentQuestion].answer === optionChosen) {\n  //     setScore(score - 1); // 原本的score + 1\n  //   }\n  //   setCurrentQuestion(currentQuestion - 1);\n  // }\n\n\n  function finishQuiz() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n\n    setGameState(\"endScreen\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Questions[currentQuestion].prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption(\"optionA\");\n          nextQuestion();\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption(\"optionB\");\n          alert(optionChosen);\n          nextQuestion();\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption(\"optionC\");\n          nextQuestion();\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption(\"optionD\");\n          nextQuestion();\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"CMmBC+6IZxW+9NcE68C59GSqwKY=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/apple/demos/Multiples/cutebaby/src/QuizComponents/Quiz.js"],"names":["useState","useContext","QuizContext","Questions","Quiz","score","setScore","gameState","setGameState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","chooseOption","option","nextQuestion","answer","length","finishQuiz","alert","prompt","optionA","optionB","optionC","optionD"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuestionBanks\";\n\nfunction Quiz() {\n  const { score, setScore, gameState, setGameState } = useContext(QuizContext);\n  const [currentQuestion, setCurrentQuestion] = useState(0); //0 is first object in array\n  const [optionChosen, setOptionChosen] = useState(\"\");\n\n  function chooseOption(option) {\n    setOptionChosen(option);\n  }\n\n  function nextQuestion() {\n    if (Questions[currentQuestion].answer == optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n    if (currentQuestion == Questions.length - 1) {\n      finishQuiz();\n    }\n    alert(score);\n    setCurrentQuestion(currentQuestion + 1);\n  }\n\n  // function prevQuestion() {\n  //   if (Questions[currentQuestion].answer === optionChosen) {\n  //     setScore(score - 1); // 原本的score + 1\n  //   }\n  //   setCurrentQuestion(currentQuestion - 1);\n  // }\n\n  function finishQuiz() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n    setGameState(\"endScreen\");\n  }\n\n  return (\n    <div className=\"Quiz\">\n      <h1>{Questions[currentQuestion].prompt}</h1>\n      <div>\n        <button\n          onClick={() => {\n            chooseOption(\"optionA\");\n            nextQuestion();\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionA}\n        </button>\n        <button\n          onClick={() => {\n            chooseOption(\"optionB\");\n            alert(optionChosen);\n            nextQuestion();\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionB}\n        </button>\n        <button\n          onClick={() => {\n            chooseOption(\"optionC\");\n            nextQuestion();\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionC}\n        </button>\n        <button\n          onClick={() => {\n            chooseOption(\"optionD\");\n            nextQuestion();\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionD}\n        </button>\n      </div>\n\n      {/* {currentQuestion == Questions.length - 1 ? (\n        <button>Finish Quiz</button>\n      ) : (\n        <></>\n      )} */}\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}