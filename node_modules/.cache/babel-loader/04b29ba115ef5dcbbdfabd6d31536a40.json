{"ast":null,"code":"var _jsxFileName = \"/Users/apple/demos/Multiples/MyProfolio/src/components/Home.js\";\nimport { memo } from \"react\";\nimport UrlForm from \"./UrlForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:grid lg:grid-cols-2 mx-auto max-w-7xl lg:px-8 lg:gap-8 justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:py-24 mx-auto max-w-md px-4 sm:max-w-2xl sm:px-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-white text-4xl mt-4 font-extrabold sm:text-6xl lg:mt-6 tracking-tight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block\",\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-transparent bg-clip-text bg-gradient-to-r from-red-500 to-beige-300 block\",\n            children: \"Shortner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-base text-gray-300 sm:mt-5 mt-3\",\n          children: \"Put in the link down below and it can be shortened! A practice built with React, Tailwind, and shrtcode API.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UrlForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImgAnime\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-12 max-w-md px-4 sm:max-w-2xl sm:px-6 lg:max-w-none lg:px-0 mt-12 lg:relative\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/lightbulb-png-836.png\",\n            alt: \"This is a lightBulb.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Home;\nexport default _c2 = /*#__PURE__*/memo(Home); // memo works as a higher order component, and you can simply just wrap your functional component export with it. Every time your application updates, memo will automatically perform a shallow comparison of props to determine if they've changed, and if the component needs to re-render.\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/apple/demos/Multiples/MyProfolio/src/components/Home.js"],"names":["memo","UrlForm","Home"],"mappings":";AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,0EAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,4EAAd;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,gFAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAG,UAAA,SAAS,EAAC,iDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,kFAAf;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,wBAAT;AAAkC,YAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;KAAMA,I;AA2BN,kCAAeF,IAAI,CAACE,IAAD,CAAnB,C,CACA","sourcesContent":["import { memo } from \"react\";\nimport UrlForm from \"./UrlForm\";\n\nconst Home = () => {\n  return (\n    <div className=\"py-20\">\n      <div className=\"lg:grid lg:grid-cols-2 mx-auto max-w-7xl lg:px-8 lg:gap-8 justify-center\">\n        <div className=\"lg:py-24 mx-auto max-w-md px-4 sm:max-w-2xl sm:px-6\">\n          <h1 className=\"text-white text-4xl mt-4 font-extrabold sm:text-6xl lg:mt-6 tracking-tight\">\n            <span className=\"block\">Link</span>\n            <span className=\"text-transparent bg-clip-text bg-gradient-to-r from-red-500 to-beige-300 block\">\n              Shortner\n            </span>\n          </h1>\n          <p className=\"text-white text-base text-gray-300 sm:mt-5 mt-3\">\n            Put in the link down below and it can be shortened! A practice built\n            with React, Tailwind, and shrtcode API.\n          </p>\n          <UrlForm />\n        </div>\n        <div className=\"ImgAnime\">\n          <div className=\"mx-12 max-w-md px-4 sm:max-w-2xl sm:px-6 lg:max-w-none lg:px-0 mt-12 lg:relative\">\n            <img src=\"/lightbulb-png-836.png\" alt=\"This is a lightBulb.\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Home);\n// memo works as a higher order component, and you can simply just wrap your functional component export with it. Every time your application updates, memo will automatically perform a shallow comparison of props to determine if they've changed, and if the component needs to re-render.\n"]},"metadata":{},"sourceType":"module"}