{"ast":null,"code":"var _jsxFileName = \"/Users/apple/demos/Multiples/MyProfolio/src/QuizComponents/CheckYourAnswer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuestionBanks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckYourAnswer() {\n  _s();\n\n  const {\n    score,\n    answer\n  } = useContext(QuizContext);\n  const [answer0, setAnswer0] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-2\",\n      children: \"Quiz Result \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Score: \", score, \" of \", Questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-4 \",\n      children: answer.map((answer, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-6 border-2 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: answer.q\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.a === Questions[i].answer ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Correct Answer: \", Questions[i].answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wrong Answer: \", answer.a]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Correct Answer: \", Questions[i].answer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckYourAnswer, \"I8PERKNe4FUFJzeKDaKO4B78AJg=\");\n\n_c = CheckYourAnswer;\nexport default CheckYourAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckYourAnswer\");","map":{"version":3,"sources":["/Users/apple/demos/Multiples/MyProfolio/src/QuizComponents/CheckYourAnswer.js"],"names":["useState","useContext","QuizContext","Questions","CheckYourAnswer","score","answer","answer0","setAnswer0","length","map","i","q","a"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBL,UAAU,CAACC,WAAD,CAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4BACUK,KADV,UACqBF,SAAS,CAACM,MAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBACGH,MAAM,CAACI,GAAP,CAAW,CAACJ,MAAD,EAASK,CAAT,kBACV;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,gCACE;AAAA,iCACE;AAAA,sBAASL,MAAM,CAACM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBACGN,MAAM,CAACO,CAAP,KAAaV,SAAS,CAACQ,CAAD,CAAT,CAAaL,MAA1B,gBACC;AAAA,2CAAsBH,SAAS,CAACQ,CAAD,CAAT,CAAaL,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAGC;AAAA,oCACE;AAAA,2CAAkBA,MAAM,CAACO,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,6CAAoBV,SAAS,CAACQ,CAAD,CAAT,CAAaL,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GA9CQF,e;;KAAAA,e;AAgDT,eAAeA,eAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuestionBanks\";\n\nfunction CheckYourAnswer() {\n  const { score, answer } = useContext(QuizContext);\n  const [answer0, setAnswer0] = useState(\"\");\n\n  return (\n    <div>\n      <h1 className=\"mt-2\">Quiz Result </h1>\n      <h3>\n        Score: {score} of {Questions.length}\n      </h3>\n      <ul className=\"mt-4 \">\n        {answer.map((answer, i) => (\n          <li className=\"mb-6 border-2 p-4\">\n            <p>\n              <strong>{answer.q}</strong>\n            </p>\n            <p>\n              {answer.a === Questions[i].answer ? (\n                <div>Correct Answer: {Questions[i].answer}</div>\n              ) : (\n                <div>\n                  <p>Wrong Answer: {answer.a}</p>\n                  <p>Correct Answer: {Questions[i].answer}</p>\n                </div>\n              )}\n            </p>\n            {/* <p\n              className={\n                answer.a === Questions[i].answer\n                  ? \"has-background-success has-text-white p-2\"\n                  : \"has-background-danger has-text-white p-2\"\n              }\n            >\n              Your answer: {answer.a}\n            </p>\n            {answer.a !== Questions[i].answer && (\n              <p className=\"has-background-link has-text-white p-2\">\n                Correct answer: {Questions[i].answer}\n              </p>\n            )} */}\n          </li>\n        ))}\n      </ul>\n      {/* <p>{JSON.stringify(answer)}</p> */}\n    </div>\n  );\n}\n\nexport default CheckYourAnswer;\n"]},"metadata":{},"sourceType":"module"}