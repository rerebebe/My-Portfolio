{"ast":null,"code":"var _jsxFileName = \"/Users/apple/demos/Multiples/cutebaby/src/QuizComponents/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuetionBanks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const {\n    score,\n    setScore,\n    gameState,\n    setGameState\n  } = useContext(QuizContext);\n  const [currentQuestion, setCurrentQuestion] = useState(0); //0 is first object in array\n\n  const [optionChosen, setOptionChosen] = useState(\"\");\n\n  function nextQuestion() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n\n    alert(score);\n    setCurrentQuestion(currentQuestion + 1);\n  } // function prevQuestion() {\n  //   if (Questions[currentQuestion].answer === optionChosen) {\n  //     setScore(score - 1); // 原本的score + 1\n  //   }\n  //   setCurrentQuestion(currentQuestion - 1);\n  // }\n\n\n  function finishQuiz() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score - 1); // 原本的score + 1\n    }\n\n    setGameState(\"endScreen\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Questions[currentQuestion].prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nextQuestion();\n          setOptionChosen(\"A\");\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nextQuestion();\n          setOptionChosen(\"B\");\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nextQuestion();\n          setOptionChosen(\"C\");\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nextQuestion();\n          setOptionChosen(\"D\");\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), currentQuestion == Questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Finish Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"CMmBC+6IZxW+9NcE68C59GSqwKY=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/apple/demos/Multiples/cutebaby/src/QuizComponents/Quiz.js"],"names":["useState","useContext","QuizContext","Questions","Quiz","score","setScore","gameState","setGameState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","nextQuestion","answer","alert","finishQuiz","prompt","optionA","optionB","optionC","optionD","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,MAA+CP,UAAU,CAACC,WAAD,CAA/D;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,CAAD,CAAtD,CAFc,CAE6C;;AAC3D,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASa,YAAT,GAAwB;AACtB,QAAIV,SAAS,CAACM,eAAD,CAAT,CAA2BK,MAA3B,KAAsCH,YAA1C,EAAwD;AACtDL,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR,CADsD,CACjC;AACtB;;AACDU,IAAAA,KAAK,CAACV,KAAD,CAAL;AACAK,IAAAA,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;AACD,GAXa,CAad;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASO,UAAT,GAAsB;AACpB,QAAIb,SAAS,CAACM,eAAD,CAAT,CAA2BK,MAA3B,KAAsCH,YAA1C,EAAwD;AACtDL,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR,CADsD,CACjC;AACtB;;AACDG,IAAAA,YAAY,CAAC,WAAD,CAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAKL,SAAS,CAACM,eAAD,CAAT,CAA2BQ;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,YAAY;AACZD,UAAAA,eAAe,CAAC,GAAD,CAAf;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,OALZ;AAAA,kBAOGT,SAAS,CAACM,eAAD,CAAT,CAA2BS;AAP9B;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AACE,QAAA,OAAO,EAAE,MAAM;AACbL,UAAAA,YAAY;AACZD,UAAAA,eAAe,CAAC,GAAD,CAAf;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,OALZ;AAAA,kBAOGT,SAAS,CAACM,eAAD,CAAT,CAA2BU;AAP9B;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AACE,QAAA,OAAO,EAAE,MAAM;AACbN,UAAAA,YAAY;AACZD,UAAAA,eAAe,CAAC,GAAD,CAAf;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,OALZ;AAAA,kBAOGT,SAAS,CAACM,eAAD,CAAT,CAA2BW;AAP9B;AAAA;AAAA;AAAA;AAAA,cAnBF,eA4BE;AACE,QAAA,OAAO,EAAE,MAAM;AACbP,UAAAA,YAAY;AACZD,UAAAA,eAAe,CAAC,GAAD,CAAf;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,OALZ;AAAA,kBAOGT,SAAS,CAACM,eAAD,CAAT,CAA2BY;AAP9B;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAyCGZ,eAAe,IAAIN,SAAS,CAACmB,MAAV,GAAmB,CAAtC,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,qCA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GA5EQlB,I;;KAAAA,I;AA8ET,eAAeA,IAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuetionBanks\";\n\nfunction Quiz() {\n  const { score, setScore, gameState, setGameState } = useContext(QuizContext);\n  const [currentQuestion, setCurrentQuestion] = useState(0); //0 is first object in array\n  const [optionChosen, setOptionChosen] = useState(\"\");\n\n  function nextQuestion() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n    alert(score);\n    setCurrentQuestion(currentQuestion + 1);\n  }\n\n  // function prevQuestion() {\n  //   if (Questions[currentQuestion].answer === optionChosen) {\n  //     setScore(score - 1); // 原本的score + 1\n  //   }\n  //   setCurrentQuestion(currentQuestion - 1);\n  // }\n\n  function finishQuiz() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score - 1); // 原本的score + 1\n    }\n    setGameState(\"endScreen\");\n  }\n\n  return (\n    <div className=\"Quiz\">\n      <h1>{Questions[currentQuestion].prompt}</h1>\n      <div>\n        <button\n          onClick={() => {\n            nextQuestion();\n            setOptionChosen(\"A\");\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionA}\n        </button>\n        <button\n          onClick={() => {\n            nextQuestion();\n            setOptionChosen(\"B\");\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionB}\n        </button>\n        <button\n          onClick={() => {\n            nextQuestion();\n            setOptionChosen(\"C\");\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionC}\n        </button>\n        <button\n          onClick={() => {\n            nextQuestion();\n            setOptionChosen(\"D\");\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionD}\n        </button>\n      </div>\n\n      {currentQuestion == Questions.length - 1 ? (\n        <button>Finish Quiz</button>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}