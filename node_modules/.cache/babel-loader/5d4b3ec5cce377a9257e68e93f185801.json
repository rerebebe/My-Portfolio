{"ast":null,"code":"var _jsxFileName = \"/Users/apple/demos/Multiples/cutebaby/src/QuizComponents/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuetionBanks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const {\n    score,\n    setScore\n  } = useContext(QuizContext);\n  const [currentQuestion, setCurrentQuestion] = useState(0); //0 is first object in array\n\n  const [optionChosen, setOptionChosen] = useState(\"\");\n\n  function nextQuestion() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n\n    setCurrentQuestion(currentQuestion + 1);\n  } // the idea is everytime you click, the state will increment 1\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Questions[currentQuestion].prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          nextQuestion();\n          setOptionChosen(\"A\");\n        },\n        className: \"block\",\n        children: Questions[currentQuestion].optionA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOptionChosen(\"B\"),\n        className: \"block\",\n        children: Questions[currentQuestion].optionB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOptionChosen(\"C\"),\n        className: \"block\",\n        children: Questions[currentQuestion].optionC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOptionChosen(\"D\"),\n        className: \"block\",\n        children: Questions[currentQuestion].optionD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"2yO+ZjjkSTOrXXC/frszTALt1kA=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/apple/demos/Multiples/cutebaby/src/QuizComponents/Quiz.js"],"names":["useState","useContext","QuizContext","Questions","Quiz","score","setScore","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","nextQuestion","answer","prompt","optionA","optionB","optionC","optionD"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBL,UAAU,CAACC,WAAD,CAAtC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,CAAD,CAAtD,CAFc,CAE6C;;AAC3D,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASW,YAAT,GAAwB;AACtB,QAAIR,SAAS,CAACI,eAAD,CAAT,CAA2BK,MAA3B,KAAsCH,YAA1C,EAAwD;AACtDH,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR,CADsD,CACjC;AACtB;;AACDG,IAAAA,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;AACD,GAVa,CAWd;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAKJ,SAAS,CAACI,eAAD,CAAT,CAA2BM;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,YAAY;AACZD,UAAAA,eAAe,CAAC,GAAD,CAAf;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,OALZ;AAAA,kBAOGP,SAAS,CAACI,eAAD,CAAT,CAA2BO;AAP9B;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAQ,QAAA,OAAO,EAAE,MAAMJ,eAAe,CAAC,GAAD,CAAtC;AAA6C,QAAA,SAAS,EAAC,OAAvD;AAAA,kBACGP,SAAS,CAACI,eAAD,CAAT,CAA2BQ;AAD9B;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAQ,QAAA,OAAO,EAAE,MAAML,eAAe,CAAC,GAAD,CAAtC;AAA6C,QAAA,SAAS,EAAC,OAAvD;AAAA,kBACGP,SAAS,CAACI,eAAD,CAAT,CAA2BS;AAD9B;AAAA;AAAA;AAAA;AAAA,cAbF,eAgBE;AAAQ,QAAA,OAAO,EAAE,MAAMN,eAAe,CAAC,GAAD,CAAtC;AAA6C,QAAA,SAAS,EAAC,OAAvD;AAAA,kBACGP,SAAS,CAACI,eAAD,CAAT,CAA2BU;AAD9B;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAtCQb,I;;KAAAA,I;AAwCT,eAAeA,IAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport { QuizContext } from \"../Helpers/Contexts\";\nimport { Questions } from \"../Helpers/QuetionBanks\";\n\nfunction Quiz() {\n  const { score, setScore } = useContext(QuizContext);\n  const [currentQuestion, setCurrentQuestion] = useState(0); //0 is first object in array\n  const [optionChosen, setOptionChosen] = useState(\"\");\n\n  function nextQuestion() {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score + 1); // 原本的score + 1\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  }\n  // the idea is everytime you click, the state will increment 1\n\n  return (\n    <div className=\"Quiz\">\n      <h1>{Questions[currentQuestion].prompt}</h1>\n      <div>\n        <button\n          onClick={() => {\n            nextQuestion();\n            setOptionChosen(\"A\");\n          }}\n          className=\"block\"\n        >\n          {Questions[currentQuestion].optionA}\n        </button>\n        <button onClick={() => setOptionChosen(\"B\")} className=\"block\">\n          {Questions[currentQuestion].optionB}\n        </button>\n        <button onClick={() => setOptionChosen(\"C\")} className=\"block\">\n          {Questions[currentQuestion].optionC}\n        </button>\n        <button onClick={() => setOptionChosen(\"D\")} className=\"block\">\n          {Questions[currentQuestion].optionD}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}